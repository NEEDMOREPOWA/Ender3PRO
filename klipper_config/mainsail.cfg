# Mainsail klipper definitions
#
# Copyright (C) 2021 Alex Zellner <alexander.zellner@googlemail.com>
#
# This file may be distributed under the terms of the GNU GPLv3 license
#
# Version 1.11

# add [include mainsail.cfg] to your printer.cfg to include it to your printer.cfg
# modify x_park, y_park, z_park_delta and extrude value at the macro _TOOLHEAD_PARK_PAUSE_CANCEL if needed

# use variable_park: False at CANCEL_PRINT to disallow the parking move

[virtual_sdcard]
path: ~/gcode_files
on_error_gcode:
  CANCEL_PRINT

[pause_resume]

[display_status]

########################################################################
#    Start Print
########################################################################

[gcode_macro START_PRINT]
description: "Prepare printer for printing"
gcode:
    LED_WAKE_UP  # Ensure LEDs are fully on before transitioning

    M117 Preheating...  # Display message on printer screen

    CHECK_HOME

    # LED color transition during heating (Blue → Orange → Red)
    {% set bed_temp = printer.heater_bed.target %}
    {% set nozzle_temp = printer.extruder.target %}

    {% for i in range(6) %}
        {% set heat_progress = i / 5.0 %}
        {% if heat_progress < 0.5 %}
            {% set red = heat_progress * 2 %}
            {% set green = heat_progress %}
            {% set blue = 1.0 - heat_progress * 2 %}
        {% else %}
            {% set red = 1.0 %}
            {% set green = (1.0 - heat_progress) * 2 %}
            {% set blue = 0.0 %}
        {% endif %}
        SET_LED LED=LED RED={red} GREEN={green} BLUE={blue}
        G4 P35000  # Wait 2 seconds before next transition
    {% endfor %}

    # Wait for slicer-set temperatures to be reached
    M190 S{bed_temp}  # Wait for bed to reach temp
    M109 S{nozzle_temp}  # Wait for nozzle to reach temp

    # Final LED state when fully heated (White)
    SET_LED LED=LED RED=1.0 GREEN=1.0 BLUE=1.0  

    # Optional: Run bed leveling only if needed
    {% if printer["gcode_move"].homing_origin.z < 2.0 %}
        M117 Leveling Bed...
        BED_MESH_CALIBRATE
    {% endif %}

    G92 E0  # Reset extruder position
    G1 Z5 F3000  # Move nozzle up slightly
    G1 X5 Y10 F5000  # Move to the side of the bed
    G1 Z0.3 F1000  # Lower to first layer height
    G1 X150 E15 F1000  # Prime the nozzle with a long extrusion
    G1 X180 F5000  # Wipe the nozzle

    M117 Printing...
    G92 E0  # Reset extruder position again

########################################################################
#    End Print
########################################################################      

[gcode_macro END_PRINT]
description: "Shut down printer after a completed print"
gcode:
    M400  # Wait for all movements to finish
    M104 S0  # Turn off hotend
    M140 S0  # Turn off bed heater
    M107  # Turn off part cooling fan

    # Move print head away from the print
    G91  # Relative positioning
    G1 Z10 F300  # Raise nozzle to avoid collision
    G90  # Absolute positioning
    G1 X0 Y220 F3000  # Move to the front-left for easy part removal

    # LED effect for print completion
    SET_LED LED=LED RED=0.0 GREEN=1.0 BLUE=0.0  # Green (Print Complete)
    G4 P30000  # Hold for 30 seconds
    SET_LED LED=LED RED=0.2 GREEN=0.2 BLUE=0.2  # Dim LEDs after completion

    M117 Print Complete!  # Display message on LCD
    M84  # Disable motors
    
########################################################################
#    Cancel Print
########################################################################    

[gcode_macro CANCEL_PRINT]
description: "Cancel the current print"
rename_existing: CANCEL_PRINT_BASE
gcode:
    {% if printer.pause_resume.is_paused|lower == 'false' %}
        _TOOLHEAD_PARK_PAUSE_CANCEL
    {% endif %}
    
    M117 Cancelling Print...  # Display message on screen

    # Move the print head up by 100mm but do not exceed the max Z height
    {% set max_z = printer.toolhead.axis_maximum.z | default(250) %}  # Default max Z = 250mm
    {% set new_z = printer.toolhead.position.z + 100 %}
    {% if new_z > max_z %}
        {% set new_z = max_z %}
    {% endif %}
    G1 Z{new_z} F3000  # Move up safely

    TURN_OFF_HEATERS
    M106 S0  # Turn off fan
    M104 S0  # Turn off hotend
    M140 S0  # Turn off bed

    # Set LEDs to red to indicate error/cancellation
    SET_LED LED=LED RED=1.0 GREEN=0.0 BLUE=0.0  

    CANCEL_PRINT_BASE  # Run the original cancel print macro

########################################################################
#    Pause
########################################################################

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

########################################################################
#    Resume
########################################################################

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

########################################################################
#    Toolhead Park
########################################################################  

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-.05 F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z100 F900
    G90
    G1 X0 Y175 F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
